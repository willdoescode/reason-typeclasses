// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");

function equals(a, b) {
  return a === b;
}

var StringEq = {
  equals: equals
};

function equals$1(a, b) {
  return a === b;
}

var IntEq = {
  equals: equals$1
};

function lte(a, b) {
  return a <= b;
}

var IntOrd = {
  equals: equals$1,
  lte: lte
};

function OrdExtras(Ord) {
  var lt = function (a, b) {
    if (Curry._2(Ord.lte, a, b)) {
      return !Curry._2(Ord.equals, a, b);
    } else {
      return false;
    }
  };
  var gt = function (a, b) {
    return !Curry._2(Ord.lte, a, b);
  };
  var gte = function (a, b) {
    if (Curry._2(Ord.lte, a, b)) {
      return Curry._2(Ord.equals, a, b);
    } else {
      return true;
    }
  };
  var inRange = function (min, max, value) {
    if (gte(value, min)) {
      return Curry._2(Ord.lte, value, max);
    } else {
      return false;
    }
  };
  var clamp = function (min, max, value) {
    if (lt(value, min)) {
      return min;
    } else if (Curry._2(Ord.lte, value, max)) {
      return value;
    } else {
      return max;
    }
  };
  return {
          lt: lt,
          gt: gt,
          gte: gte,
          inRange: inRange,
          clamp: clamp
        };
}

function lt(a, b) {
  if (a <= b) {
    return a !== b;
  } else {
    return false;
  }
}

function gt(a, b) {
  return a > b;
}

function gte(a, b) {
  if (a > b) {
    return true;
  } else {
    return a === b;
  }
}

function inRange(min, max, value) {
  if (gte(value, min)) {
    return value <= max;
  } else {
    return false;
  }
}

function clamp(min, max, value) {
  if (lt(value, min)) {
    return min;
  } else if (value > max) {
    return max;
  } else {
    return value;
  }
}

var IntOrdExtras = {
  lt: lt,
  gt: gt,
  gte: gte,
  inRange: inRange,
  clamp: clamp
};

clamp(4, 12, 1);

function toInt(month) {
  return month;
}

function equals$2(a, b) {
  return a === b;
}

function lte$1(a, b) {
  return a <= b;
}

var MonthOrd = {
  equals: equals$2,
  lte: lte$1
};

function lt$1(a, b) {
  if (a <= b) {
    return a !== b;
  } else {
    return false;
  }
}

function gt$1(a, b) {
  return a > b;
}

function gte$1(a, b) {
  if (a > b) {
    return true;
  } else {
    return a === b;
  }
}

function inRange$1(min, max, value) {
  if (gte$1(value, min)) {
    return value <= max;
  } else {
    return false;
  }
}

function clamp$1(min, max, value) {
  if (lt$1(value, min)) {
    return min;
  } else if (value > max) {
    return max;
  } else {
    return value;
  }
}

var MonthOrdExtras = {
  lt: lt$1,
  gt: gt$1,
  gte: gte$1,
  inRange: inRange$1,
  clamp: clamp$1
};

inRange$1(/* Feb */1, /* Apr */3, /* Mar */2);

exports.StringEq = StringEq;
exports.IntEq = IntEq;
exports.IntOrd = IntOrd;
exports.OrdExtras = OrdExtras;
exports.IntOrdExtras = IntOrdExtras;
exports.toInt = toInt;
exports.MonthOrd = MonthOrd;
exports.MonthOrdExtras = MonthOrdExtras;
/*  Not a pure module */
